Esercizio – API RESTful per la Gestione di Appuntamenti Medici
Obiettivo:
Realizza un’API RESTful utilizzando Flask e la libreria flask_restful per gestire gli appuntamenti di uno studio medico. Ogni appuntamento deve contenere le seguenti informazioni:
id: identificativo numerico univoco
paziente: nome e cognome del paziente
data: data dell’appuntamento in formato YYYY-MM-DD
orario: orario dell’appuntamento in formato HH:MM (24h)
motivo: breve descrizione del motivo della visita



Funzionalità richieste:
CRUD completo per gli appuntamenti


GET /appointments: restituisce la lista di tutti gli appuntamenti.
GET /appointments/<id>: restituisce i dettagli dell’appuntamento con l’ID specificato.
POST /appointments: aggiunge un nuovo appuntamento. Il client invia un oggetto JSON con i dati richiesti (escluso l’ID, che viene generato automaticamente).
PUT /appointments/<id>: modifica un appuntamento esistente.
DELETE /appointments/<id>: elimina l’appuntamento con l’ID specificato.


Controllo conflitti orari


Quando si aggiunge o modifica un appuntamento (POST o PUT), il sistema deve impedire la sovrapposizione: non possono esserci due appuntamenti nella stessa data e allo stesso orario.
In caso di conflitto, il server restituisce un errore 409 Conflict con un messaggio esplicativo.


Endpoint per gli appuntamenti odierni


GET /appointments/today: restituisce tutti gli appuntamenti relativi alla data odierna (basandosi sulla data del server).
L’elenco deve essere ordinato per orario crescente.



Suggerimenti:
Utilizza flask_restful per definire le risorse e gestire le rotte.
I dati possono essere gestiti in una struttura dati in memoria (es. dizionario o lista).
 L’uso di un database non è obbligatorio ma può essere un’estensione facoltativa.
Utilizza il modulo datetime per confronti tra date e orari.
Gestisci gli errori e i messaggi di risposta in modo chiaro ed esplicito.

Facoltativo:
Aggiungi un campo durata per gli appuntamenti e impedisci sovrapposizioni anche parziali.
Implementa un filtro GET /appointments?date=YYYY-MM-DD per una data specifica.
Proteggi l’API con una semplice autenticazione token.


curl -X PUT http://127.0.0.1:5000/appointments/1 -H "Content-Type: application/json" -d "{\"dataN\": \"2025-05-14\", \"ora\": \"19:30\", \"durata\": 30}"
